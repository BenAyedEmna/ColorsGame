@page "/Game"
@using Models;
@if(ActuelGrid.GameIsNotStarted()==true)
            {
                <button @onclick="Start">Start!</button>
            }
@if(ActuelGrid.GameIsStarted()==true)
{
    <div>Level:@niveau</div>
    <div>choise @ActuelGrid.TrueColor</div>
    <table class="table">
    @for (var i = 0; i < ActuelGrid.Column; i++)
    {
        <tr>
            @for (var j = 0; j < ActuelGrid.Row; j++)
            {
                switch (ActuelGrid.grid[i][j].Color)
                {
                    case Colors.green:
                        if (Colors.green == ActuelGrid.TrueColor)
                        {
                            <td class="Green-cell" @onclick="ColorFounded"></td>
                        }
                        else
                        {
                            <td class="Green-cell" @onclick="Failed"></td>
                        }
                        break;
                    case Colors.blue:
                        if (Colors.blue == ActuelGrid.TrueColor)
                        {
                            <td class="Blue-cell" @onclick="ColorFounded"></td>
                        }
                        else
                        {
                            <td class="Blue-cell" @onclick="Failed"></td>
                        }
                        break;
                    case Colors.yellow:
                        if (Colors.yellow == ActuelGrid.TrueColor)
                        {
                            <td class="Yellow-cell" @onclick="ColorFounded"></td>
                        }
                        else
                        {
                            <td class="Yellow-cell" @onclick="Failed"></td>
                        }
                        break;
                    case Colors.red:
                        if (Colors.red == ActuelGrid.TrueColor)
                        {
                            <td class="Red-cell" @onclick="ColorFounded"></td>
                        }
                        else
                        {
                            <td class="Red-cell" @onclick="Failed"></td>
                        }
                        break;
                    case Colors.black:
                        if (Colors.black == ActuelGrid.TrueColor)
                        {
                            <td class="Black-cell" @onclick="ColorFounded"></td>
                        }
                        else
                        {
                            <td class="Black-cell" @onclick="Failed"></td>
                        }
                        break;
                    case Colors.grey:
                        if (Colors.grey == ActuelGrid.TrueColor)
                        {
                            <td class="Grey-cell" @onclick="ColorFounded"></td>
                        }
                        else
                        {
                            <td class="Grey-cell" @onclick="Failed"></td>
                        }
                        break;
                    case Colors.orange:
                        if (Colors.orange == ActuelGrid.TrueColor)
                        {
                            <td class="Orange-cell" @onclick="ColorFounded">orange</td>
                        }
                        else
                        {
                            <td class="Orange-cell" @onclick="Failed">orange</td>
                        }
                        break;
                    case Colors.purple:
                        if (Colors.purple== ActuelGrid.TrueColor)
                        {
                            <td class="Purple-cell" @onclick="ColorFounded"></td>
                        }
                        else
                        {
                            <td class="Purple-cell" @onclick="Failed"></td>
                        }
                        break;
                }
            }
        </tr>
    }
    </table>
}
else if(ActuelGrid.GameIsOver()== true)
      {
        <div class="GameOver">Game Over</div><hr />
        <button @onclick="Start">Play again </button>
      }

@code 
{
    static int niveau = 1;
    Grid ActuelGrid = new Grid();
    protected override Task OnInitializedAsync()
    {
        ActuelGrid.InitialGrid(); 
        return base.OnInitializedAsync();
    }

    public void Start()
    {
        ActuelGrid.StartGame();
    }

    public void ColorFounded()
    {
        Console.WriteLine("coool");
        niveau++;
        ActuelGrid.RefreshGrid(niveau);
    }

    public void Failed()
    {
        Console.WriteLine("Game over");
        niveau = 1;
        ActuelGrid.GameOver();
    }
}

